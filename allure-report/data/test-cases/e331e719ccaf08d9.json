{
  "uid" : "e331e719ccaf08d9",
  "name" : "test_group_list",
  "fullName" : "test.group.test_db_matches_ui#test_group_list",
  "historyId" : "76101cdc04dea1c94959c57f934d4ee5",
  "time" : {
    "start" : 1635087287991,
    "stop" : 1635087288466,
    "duration" : 475
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False",
  "statusTrace" : "app = <fixture.application.Application object at 0x000001F7E28FE130>\ndb = <fixture.db.DbFixture object at 0x000001F7E28FE1C0>\n\n    def test_group_list(app, db):\n        print(timeit(lambda: app.group.get_group_list(), number=1))\n    \n        def clean(group):\n            return Group(id=group.id, name=group.name.strip())\n        print(timeit(lambda:  map(clean, db.get_group_list()), number=1))\n>       assert False #sorted(ui_list, key=Group.id_or_max) == sorted(db_list, key=Group.id_or_max)\nE       assert False\n\ntest\\group\\test_db_matches_ui.py:11: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "app",
    "time" : {
      "start" : 1635087287970,
      "stop" : 1635087287991,
      "duration" : 21
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "stop",
    "time" : {
      "start" : 1635087230696,
      "stop" : 1635087230696,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1635087230696,
      "stop" : 1635087230700,
      "duration" : 4
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False",
    "statusTrace" : "app = <fixture.application.Application object at 0x000001F7E28FE130>\ndb = <fixture.db.DbFixture object at 0x000001F7E28FE1C0>\n\n    def test_group_list(app, db):\n        print(timeit(lambda: app.group.get_group_list(), number=1))\n    \n        def clean(group):\n            return Group(id=group.id, name=group.name.strip())\n        print(timeit(lambda:  map(clean, db.get_group_list()), number=1))\n>       assert False #sorted(ui_list, key=Group.id_or_max) == sorted(db_list, key=Group.id_or_max)\nE       assert False\n\ntest\\group\\test_db_matches_ui.py:11: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "ac783324425a34d0",
      "name" : "stdout",
      "source" : "ac783324425a34d0.txt",
      "type" : "text/plain",
      "size" : 42
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "stop::fin",
    "time" : {
      "start" : 1635087292696,
      "stop" : 1635087293362,
      "duration" : 666
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::fin",
    "time" : {
      "start" : 1635087292695,
      "stop" : 1635087292695,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test.group"
  }, {
    "name" : "suite",
    "value" : "test_db_matches_ui"
  }, {
    "name" : "host",
    "value" : "DESKTOP-VASELE"
  }, {
    "name" : "thread",
    "value" : "8888-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.group.test_db_matches_ui"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "e331e719ccaf08d9.json",
  "parameterValues" : [ ]
}